{"ast":null,"code":"import { ViewContainerRef } from '@angular/core';\nimport { select } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { clearTripState, getTrips, getTripByHash } from 'src/app/core/store/trip/trip.actions';\nimport * as tripSelector from 'src/app/core/store/trip/trip.selector';\nimport * as _moment from 'moment';\nimport { paths } from 'src/app/shared/paths';\nimport { DialogTripComponent } from 'src/app/shared/components/dialog-trip/dialog-trip.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/trip.service\";\nimport * as i2 from \"src/app/core/services/date.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@ngrx/store\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../../../shared/components/header-trip/header-trip.component\";\nimport * as i7 from \"../../../../shared/components/card-add-trip/card-add-trip.component\";\nimport * as i8 from \"ngx-owl-carousel\";\nimport * as i9 from \"../../../../shared/components/card-trip/card-trip.component\";\nimport * as i10 from \"@angular/material/expansion\";\nimport * as i11 from \"@angular/material/grid-list\";\nimport * as i12 from \"@ngx-translate/core\";\nconst _c0 = [\"tripDialog\"];\n\nfunction DashboardPage_app_header_trip_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-header-trip\", 13);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"title\", \"content.on-going-trip\")(\"trip\", ctx_r0.onGoingTrip);\n  }\n}\n\nfunction DashboardPage_app_card_add_trip_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-card-add-trip\", 14);\n    i0.ɵɵlistener(\"addClick\", function DashboardPage_app_card_add_trip_7_Template_app_card_add_trip_addClick_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.navigateToNewTrip();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DashboardPage_owl_carousel_8_app_card_trip_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-card-trip\", 17);\n    i0.ɵɵlistener(\"click\", function DashboardPage_owl_carousel_8_app_card_trip_2_Template_app_card_trip_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const trip_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.getTripByHash(trip_r9.hash);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const trip_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"trip\", trip_r9);\n  }\n}\n\nconst _c1 = function () {\n  return [\"owl-theme\", \"sliding\"];\n};\n\nfunction DashboardPage_owl_carousel_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"owl-carousel\", 15)(1, \"app-card-add-trip\", 14);\n    i0.ɵɵlistener(\"addClick\", function DashboardPage_owl_carousel_8_Template_app_card_add_trip_addClick_1_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.navigateToNewTrip();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, DashboardPage_owl_carousel_8_app_card_trip_2_Template, 1, 1, \"app-card-trip\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"options\", ctx_r2.carouselOptions)(\"carouselClasses\", i0.ɵɵpureFunction0(4, _c1));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.upcomingTrips)(\"ngForTrackBy\", ctx_r2.trackByTrip);\n  }\n}\n\nfunction DashboardPage_mat_grid_tile_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-grid-tile\")(1, \"app-card-trip\", 18);\n    i0.ɵɵlistener(\"click\", function DashboardPage_mat_grid_tile_24_Template_app_card_trip_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const trip_r14 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.getTripByHash(trip_r14.hash);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const trip_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"trip\", trip_r14);\n  }\n}\n\nfunction DashboardPage_ng_template_25_Template(rf, ctx) {}\n\nexport let DashboardPage = /*#__PURE__*/(() => {\n  class DashboardPage {\n    constructor(tripService, dateService, router, store) {\n      this.tripService = tripService;\n      this.dateService = dateService;\n      this.router = router;\n      this.store = store;\n      this.onGoingTrip = {};\n      this.upcomingTrips = [];\n      this.pastTrips = [];\n      this.carouselOptions = {\n        items: 3,\n        dots: false,\n        nav: true,\n        slideBy: 3\n      };\n      this.panelOpenState = false;\n      this.columns = 3;\n      this.rowHeight = '420px';\n      this.isLoading = false;\n      this.subscriptions = new Subscription();\n      this.subscriptions.add(this.store.pipe(select(tripSelector.getTrips)).subscribe(trips => {\n        this.organizeTrips(trips);\n      }));\n      this.subscriptions.add(this.store.pipe(select(tripSelector.getTrip)).subscribe(trip => {\n        if (trip.hash) {\n          trip = Object.assign(Object.assign({}, trip), {\n            summary_date: this.dateService.convertDates(trip.departure_date, trip.arrival_date)\n          });\n          this.openDialog(trip);\n        }\n      }));\n      this.subscriptions.add(this.store.pipe(select(tripSelector.getIsLoadingTrips)).subscribe(isLoadingTrips => {\n        this.isLoading = isLoadingTrips;\n      }));\n    }\n\n    ngOnInit() {\n      this.setDimensions(window);\n      this.getTrips();\n    }\n\n    getTrips() {\n      this.store.dispatch(getTrips());\n    }\n\n    getTripByHash(hash) {\n      this.store.dispatch(getTripByHash({\n        hash: hash\n      }));\n    }\n\n    openDialog(trip) {\n      const component = this.tripDialog.createComponent(DialogTripComponent);\n      component.instance.open();\n      component.instance.trip = trip;\n      component.instance.closeClick.subscribe(() => {\n        this.tripDialog.clear();\n      });\n    }\n\n    setDimensions(event) {\n      const width = event.innerWidth;\n\n      if (width < 768) {\n        this.refreshDimensions(1, '340px');\n        this.carouselOptions = {\n          items: 1,\n          dots: false,\n          nav: true,\n          slideBy: 1\n        };\n      } else {\n        if (width >= 768 && width < 1300) {\n          this.refreshDimensions(2, '380px');\n          this.carouselOptions = {\n            items: 2,\n            dots: false,\n            nav: true,\n            slideBy: 2\n          };\n        } else {\n          if (width >= 1300 && width < 1860) {\n            this.refreshDimensions(3, '420px');\n            this.carouselOptions = {\n              items: 3,\n              dots: false,\n              nav: true,\n              slideBy: 3\n            };\n          }\n        }\n      }\n    }\n\n    trackByTrip(index, item) {\n      return index;\n    }\n\n    navigateToNewTrip() {\n      this.router.navigate([`${paths.new_trip}/`]);\n    }\n\n    ngOnDestroy() {\n      this.store.dispatch(clearTripState());\n      this.subscriptions.unsubscribe();\n    }\n\n    refreshDimensions(columns, rowHeight) {\n      this.columns = columns;\n      this.rowHeight = rowHeight;\n    }\n    /* *\r\n     * Upcoming Trips - trips in which arrival_date is a future date, bigger than 7 days ahead.\r\n     * Past Trips - trips with arrival_date on a past date (a day or more before the current day).\r\n     * Current trip - trips with the current date between departure_date and arrival_date, or with arrival_date is in within the next 7 days. It will\r\n     * only be a current trip at the same time. Current trip will be visualized at the top (in the called hero section) as shown on the design\r\n     * */\n\n\n    organizeTrips(trips) {\n      this.onGoingTrip = {};\n      this.pastTrips = [];\n      this.upcomingTrips = [];\n\n      let upcomingDate = _moment().add(7, 'days').format('YYYY-MM-DD');\n\n      trips.forEach(trip => {\n        trip = Object.assign(Object.assign({}, trip), {\n          summary_date: this.dateService.convertDates(trip.departure_date, trip.arrival_date)\n        });\n\n        if (_moment().isSameOrAfter(trip.departure_date) && (_moment().isSameOrBefore(trip.arrival_date) || _moment(upcomingDate).isBefore(trip.arrival_date))) {\n          this.onGoingTrip = trip;\n        } else {\n          if (_moment().isAfter(trip.arrival_date)) {\n            this.pastTrips.push(trip);\n          } else {\n            if (_moment(upcomingDate).isBefore(trip.arrival_date)) {\n              this.upcomingTrips.push(trip);\n            }\n          }\n        }\n      });\n      this.upcomingTrips = this.tripService.sortTrips(this.upcomingTrips, true);\n      this.pastTrips = this.tripService.sortTrips(this.pastTrips, false);\n    }\n\n  }\n\n  DashboardPage.ɵfac = function DashboardPage_Factory(t) {\n    return new (t || DashboardPage)(i0.ɵɵdirectiveInject(i1.TripService), i0.ɵɵdirectiveInject(i2.DateService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.Store));\n  };\n\n  DashboardPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardPage,\n    selectors: [[\"app-dashboard\"]],\n    viewQuery: function DashboardPage_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tripDialog = _t.first);\n      }\n    },\n    decls: 27,\n    vars: 22,\n    consts: [[1, \"trips-container\"], [1, \"on-going-container\"], [3, \"title\", \"trip\", 4, \"ngIf\"], [1, \"upcoming-container\", \"py-4\"], [1, \"mat-subheading-2\"], [3, \"addClick\", 4, \"ngIf\"], [3, \"options\", \"carouselClasses\", 4, \"ngIf\"], [1, \"past-container\", \"pb-4\"], [3, \"opened\", \"closed\"], [1, \"p-0\"], [1, \"py-3\", \"w-100\", 3, \"rowHeight\", \"cols\", \"resize\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"tripDialog\", \"\"], [3, \"title\", \"trip\"], [3, \"addClick\"], [3, \"options\", \"carouselClasses\"], [3, \"trip\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"trip\", \"click\"], [1, \"w-100\", 3, \"trip\", \"click\"]],\n    template: function DashboardPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, DashboardPage_app_header_trip_2_Template, 1, 2, \"app-header-trip\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"p\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, DashboardPage_app_card_add_trip_7_Template, 1, 0, \"app-card-add-trip\", 5);\n        i0.ɵɵtemplate(8, DashboardPage_owl_carousel_8_Template, 3, 5, \"owl-carousel\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"mat-accordion\")(11, \"mat-expansion-panel\", 8);\n        i0.ɵɵlistener(\"opened\", function DashboardPage_Template_mat_expansion_panel_opened_11_listener() {\n          return ctx.panelOpenState = true;\n        })(\"closed\", function DashboardPage_Template_mat_expansion_panel_closed_11_listener() {\n          return ctx.panelOpenState = false;\n        });\n        i0.ɵɵelementStart(12, \"mat-expansion-panel-header\", 9)(13, \"mat-panel-title\")(14, \"p\", 4);\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"mat-panel-description\");\n        i0.ɵɵtext(18);\n        i0.ɵɵpipe(19, \"uppercase\");\n        i0.ɵɵpipe(20, \"translate\");\n        i0.ɵɵpipe(21, \"uppercase\");\n        i0.ɵɵpipe(22, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"mat-grid-list\", 10);\n        i0.ɵɵlistener(\"resize\", function DashboardPage_Template_mat_grid_list_resize_23_listener($event) {\n          return ctx.setDimensions($event.target);\n        }, false, i0.ɵɵresolveWindow);\n        i0.ɵɵtemplate(24, DashboardPage_mat_grid_tile_24_Template, 2, 1, \"mat-grid-tile\", 11);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(25, DashboardPage_ng_template_25_Template, 0, 0, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.onGoingTrip);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 10, \"content.upcoming-trip\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.upcomingTrips.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.upcomingTrips.length > 0);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 12, \"content.past-trip\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.panelOpenState ? i0.ɵɵpipeBind1(19, 14, i0.ɵɵpipeBind1(20, 16, \"content.see-less\")) : i0.ɵɵpipeBind1(21, 18, i0.ɵɵpipeBind1(22, 20, \"content.see-more\")), \" \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"rowHeight\", ctx.rowHeight)(\"cols\", ctx.columns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.pastTrips)(\"ngForTrackBy\", ctx.trackByTrip);\n      }\n    },\n    directives: [i5.NgIf, i6.HeaderTripComponent, i7.CardAddTripComponent, i8.OwlCarousel, i5.NgForOf, i9.CardTripComponent, i10.MatAccordion, i10.MatExpansionPanel, i10.MatExpansionPanelHeader, i10.MatExpansionPanelTitle, i10.MatExpansionPanelDescription, i11.MatGridList, i11.MatGridTile],\n    pipes: [i12.TranslatePipe, i5.UpperCasePipe],\n    styles: [\".trips-container[_ngcontent-%COMP%]   .on-going-container[_ngcontent-%COMP%]{background:var(--color-background-tertiary)}.trips-container[_ngcontent-%COMP%]   .upcoming-container[_ngcontent-%COMP%]{border-top:1px solid var(--color-border-primary);border-bottom:1px solid var(--color-border-primary);margin:40px 122px;padding:24px 0}.trips-container[_ngcontent-%COMP%]   .past-container[_ngcontent-%COMP%]{border-bottom:1px solid var(--color-border-primary);margin:40px 122px;padding:24px 0}@media (max-width: 768px){.trips-container[_ngcontent-%COMP%]   .upcoming-container[_ngcontent-%COMP%], .trips-container[_ngcontent-%COMP%]   .past-container[_ngcontent-%COMP%]{margin:18px 40px}}@media (min-width: 768px) and (max-width: 992px){.trips-container[_ngcontent-%COMP%]   .upcoming-container[_ngcontent-%COMP%], .trips-container[_ngcontent-%COMP%]   .past-container[_ngcontent-%COMP%]{margin:24px 60px}}\"]\n  });\n  return DashboardPage;\n})();","map":null,"metadata":{},"sourceType":"module"}